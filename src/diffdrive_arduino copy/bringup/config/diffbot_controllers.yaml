controller_manager:
  ros__parameters:
    update_rate: 10  # Hz

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    diffbot_base_controller:
      type: diff_drive_controller/DiffDriveController

    imu_broadcaster:
      type: imu_sensor_broadcaster/IMUSensorBroadcaster

imu_broadcaster:
  ros_parameters:
    sensor_name: "imu"
    frame_id: "imu"
    publish_acceleration: true # Publish acceleration
    publish_angular_velocity: true # Publish angular velocity
    publish_orientation: true # Publish orientation

# Configure EKF filter node
ekf_filter_node:
  ros__parameters:
    frequency: 30.0 # Hz  # Frequency of the filter running
    sensor_timeout: 0.1 # seconds  # Time after which a sensor is considered to be not active
    two_d_mode: false # Enable 3D mode
    publish_tf: true
    # Frame IDs used by the EKF
    map_frame: "map"
    odom_frame: "odom"
    base_link_frame: "base_link"
    world_frame: "odom"
    odom0: "odom"   # Name of the odometry source
    odom0_config: [false, false, false, false, false, false,
                   true,  true,  true,  false, false, true,
                   false, false, false]
    imu0: "imu"
    imu0_config: [true,  true,  true,  # Enable orientation
                  true,  true,  true,  # Enable angular velocity
                  false, false, false,
                  true,  true,  true]  # Enable linear acceleration
    imu0_differential: false
    imu0_remove_gravitational_acceleration: true

diffbot_base_controller:
  ros__parameters:
    left_wheel_names: ["left_wheel_joint"]  # Name of the left wheel joint
    right_wheel_names: ["right_wheel_joint"]  # Name of the right wheel joint

    wheel_separation: 0.10  # Distance between the wheels in meters
    # wheels_per_side: 1  # actually 2, but both are controlled by 1 signal
    wheel_radius: 0.015  # Radius of the wheels in meters

    wheel_separation_multiplier: 1.0  # Multiplier for the wheel separation
    left_wheel_radius_multiplier: 1.0  # Multiplier for the left wheel radius
    right_wheel_radius_multiplier: 1.0  # Multiplier for the right wheel radius

    # Feedback from motors is published at around 50Hz
    publish_rate: 50.0  # Rate at which feedback is published in Hz
    odom_frame_id: odom  # Frame ID for the odometry
    base_frame_id: base_link  # Frame ID for the base link
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]  # Pose covariance diagonal
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]  # Twist covariance diagonal

    # Whether to use feedback or commands for odometry calculations
    open_loop: true  # Use open loop for odometry calculations
    enable_odom_tf: true  # Enable publishing of odometry transform

    cmd_vel_timeout: 0.5  # Timeout for command velocity in seconds
    # publish_limited_velocity: true
    use_stamped_vel: false  # Use stamped velocity
    # velocity_rolling_window_size: 10

    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*
    linear.x.has_velocity_limits: true  # Enable velocity limits for linear x
    linear.x.has_acceleration_limits: true  # Enable acceleration limits for linear x
    linear.x.has_jerk_limits: false  # Enable jerk limits for linear x
    linear.x.max_velocity: 1.0  # Maximum velocity for linear x in m/s
    linear.x.min_velocity: -1.0  # Minimum velocity for linear x in m/s
    linear.x.max_acceleration: 1.0  # Maximum acceleration for linear x in m/s^2
    linear.x.max_jerk: 0.0  # Maximum jerk for linear x in m/s^3
    linear.x.min_jerk: 0.0  # Minimum jerk for linear x in m/s^3

    angular.z.has_velocity_limits: true  # Enable velocity limits for angular z
    angular.z.has_acceleration_limits: true  # Enable acceleration limits for angular z
    angular.z.has_jerk_limits: false  # Enable jerk limits for angular z
    angular.z.max_velocity: 1.0  # Maximum velocity for angular z in rad/s
    angular.z.min_velocity: -1.0  # Minimum velocity for angular z in rad/s
    angular.z.max_acceleration: 1.0  # Maximum acceleration for angular z in rad/s^2
    angular.z.min_acceleration: -1.0  # Minimum acceleration for angular z in rad/s^2
    angular.z.max_jerk: 0.0  # Maximum jerk for angular z in rad/s^3
    angular.z.min_jerk: 0.0  # Minimum jerk for angular z in rad/s^3
